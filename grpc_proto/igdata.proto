syntax = "proto3";


option go_package = "git.ghtk.vn/gmicro/ig/igdata-service/igrpcproto";

package igrpcproto;

// igdata service
service igdata {
  // Ping Service
  rpc Ping (PingRequest) returns (PingResponse) {}

  // ESQuery Service
  rpc EsQuery (ESQuery) returns (ESResponse) {}

  // SQLQuery Service
  rpc SQLQuery (SQLQueryRequest) returns (SQLQueryResponse) {}

  // Stream ESQuery service
  rpc EsQueryStream(stream ESQuery) returns (stream ESResponse);

  // Stream SQLQuery service
  rpc SQLQueryStream(stream SQLQueryRequest) returns (stream SQLQueryResponse);
}

// Ping request
message PingRequest {
  string message = 1;
}

// Ping response
message PingResponse{
  string message = 1;
}

// Condition message
message SQLCondition {
  string column = 1;
  string comparison_operator = 2;
  bytes value = 3;
}

message SQLSort {
  string column = 1;
  string mode = 2;
}

message SQLPaginate {
  int64 limit = 1;
  int64 page = 2;
}

message SQLConjunction {
  string type = 1;
  repeated SQLCondition conditions = 2;
}

message SQLQueryRequest {
  SQLPaginate paginate = 1;
  string connection_name = 2;
  string table_name = 3;
  repeated string select = 4;
  repeated string omit_columns = 5;
  repeated SQLSort sorts = 6;
  repeated SQLConjunction conjunctions =7;
}

message SQLQueryResultPaginate {
  int64 total = 1;
  int64 current_page = 2;
  int64 limit = 3;
}

message SQLQueryResponse {
  SQLQueryResultPaginate paginate = 1;
  bytes data = 2;
}

message ESQuery {
  string connection_name = 1;
  string index_name = 2;
  bytes body = 3;
}

message ESResponse {
  bytes Response = 1;
}
