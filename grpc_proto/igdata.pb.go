// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: igdata.proto

package igrpcproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Ping request
type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_igdata_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_igdata_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_igdata_proto_rawDescGZIP(), []int{0}
}

func (x *PingRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Ping response
type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_igdata_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_igdata_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_igdata_proto_rawDescGZIP(), []int{1}
}

func (x *PingResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Condition message
type SQLCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Column             string `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
	ComparisonOperator string `protobuf:"bytes,2,opt,name=comparison_operator,json=comparisonOperator,proto3" json:"comparison_operator,omitempty"`
	Value              []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SQLCondition) Reset() {
	*x = SQLCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_igdata_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SQLCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SQLCondition) ProtoMessage() {}

func (x *SQLCondition) ProtoReflect() protoreflect.Message {
	mi := &file_igdata_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SQLCondition.ProtoReflect.Descriptor instead.
func (*SQLCondition) Descriptor() ([]byte, []int) {
	return file_igdata_proto_rawDescGZIP(), []int{2}
}

func (x *SQLCondition) GetColumn() string {
	if x != nil {
		return x.Column
	}
	return ""
}

func (x *SQLCondition) GetComparisonOperator() string {
	if x != nil {
		return x.ComparisonOperator
	}
	return ""
}

func (x *SQLCondition) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type SQLSort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Column string `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
	Mode   string `protobuf:"bytes,2,opt,name=mode,proto3" json:"mode,omitempty"`
}

func (x *SQLSort) Reset() {
	*x = SQLSort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_igdata_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SQLSort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SQLSort) ProtoMessage() {}

func (x *SQLSort) ProtoReflect() protoreflect.Message {
	mi := &file_igdata_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SQLSort.ProtoReflect.Descriptor instead.
func (*SQLSort) Descriptor() ([]byte, []int) {
	return file_igdata_proto_rawDescGZIP(), []int{3}
}

func (x *SQLSort) GetColumn() string {
	if x != nil {
		return x.Column
	}
	return ""
}

func (x *SQLSort) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

type SQLPaginate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page  int64 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *SQLPaginate) Reset() {
	*x = SQLPaginate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_igdata_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SQLPaginate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SQLPaginate) ProtoMessage() {}

func (x *SQLPaginate) ProtoReflect() protoreflect.Message {
	mi := &file_igdata_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SQLPaginate.ProtoReflect.Descriptor instead.
func (*SQLPaginate) Descriptor() ([]byte, []int) {
	return file_igdata_proto_rawDescGZIP(), []int{4}
}

func (x *SQLPaginate) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SQLPaginate) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type SQLConjunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       string          `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Conditions []*SQLCondition `protobuf:"bytes,2,rep,name=conditions,proto3" json:"conditions,omitempty"`
}

func (x *SQLConjunction) Reset() {
	*x = SQLConjunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_igdata_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SQLConjunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SQLConjunction) ProtoMessage() {}

func (x *SQLConjunction) ProtoReflect() protoreflect.Message {
	mi := &file_igdata_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SQLConjunction.ProtoReflect.Descriptor instead.
func (*SQLConjunction) Descriptor() ([]byte, []int) {
	return file_igdata_proto_rawDescGZIP(), []int{5}
}

func (x *SQLConjunction) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SQLConjunction) GetConditions() []*SQLCondition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

type SQLQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paginate       *SQLPaginate      `protobuf:"bytes,1,opt,name=paginate,proto3" json:"paginate,omitempty"`
	ConnectionName string            `protobuf:"bytes,2,opt,name=connection_name,json=connectionName,proto3" json:"connection_name,omitempty"`
	TableName      string            `protobuf:"bytes,3,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	Select         []string          `protobuf:"bytes,4,rep,name=select,proto3" json:"select,omitempty"`
	OmitColumns    []string          `protobuf:"bytes,5,rep,name=omit_columns,json=omitColumns,proto3" json:"omit_columns,omitempty"`
	Sorts          []*SQLSort        `protobuf:"bytes,6,rep,name=sorts,proto3" json:"sorts,omitempty"`
	Conjunctions   []*SQLConjunction `protobuf:"bytes,7,rep,name=conjunctions,proto3" json:"conjunctions,omitempty"`
}

func (x *SQLQueryRequest) Reset() {
	*x = SQLQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_igdata_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SQLQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SQLQueryRequest) ProtoMessage() {}

func (x *SQLQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_igdata_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SQLQueryRequest.ProtoReflect.Descriptor instead.
func (*SQLQueryRequest) Descriptor() ([]byte, []int) {
	return file_igdata_proto_rawDescGZIP(), []int{6}
}

func (x *SQLQueryRequest) GetPaginate() *SQLPaginate {
	if x != nil {
		return x.Paginate
	}
	return nil
}

func (x *SQLQueryRequest) GetConnectionName() string {
	if x != nil {
		return x.ConnectionName
	}
	return ""
}

func (x *SQLQueryRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *SQLQueryRequest) GetSelect() []string {
	if x != nil {
		return x.Select
	}
	return nil
}

func (x *SQLQueryRequest) GetOmitColumns() []string {
	if x != nil {
		return x.OmitColumns
	}
	return nil
}

func (x *SQLQueryRequest) GetSorts() []*SQLSort {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *SQLQueryRequest) GetConjunctions() []*SQLConjunction {
	if x != nil {
		return x.Conjunctions
	}
	return nil
}

type SQLQueryResultPaginate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total       int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	CurrentPage int64 `protobuf:"varint,2,opt,name=current_page,json=currentPage,proto3" json:"current_page,omitempty"`
	Limit       int64 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *SQLQueryResultPaginate) Reset() {
	*x = SQLQueryResultPaginate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_igdata_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SQLQueryResultPaginate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SQLQueryResultPaginate) ProtoMessage() {}

func (x *SQLQueryResultPaginate) ProtoReflect() protoreflect.Message {
	mi := &file_igdata_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SQLQueryResultPaginate.ProtoReflect.Descriptor instead.
func (*SQLQueryResultPaginate) Descriptor() ([]byte, []int) {
	return file_igdata_proto_rawDescGZIP(), []int{7}
}

func (x *SQLQueryResultPaginate) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SQLQueryResultPaginate) GetCurrentPage() int64 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *SQLQueryResultPaginate) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type SQLQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paginate *SQLQueryResultPaginate `protobuf:"bytes,1,opt,name=paginate,proto3" json:"paginate,omitempty"`
	Data     []byte                  `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SQLQueryResponse) Reset() {
	*x = SQLQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_igdata_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SQLQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SQLQueryResponse) ProtoMessage() {}

func (x *SQLQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_igdata_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SQLQueryResponse.ProtoReflect.Descriptor instead.
func (*SQLQueryResponse) Descriptor() ([]byte, []int) {
	return file_igdata_proto_rawDescGZIP(), []int{8}
}

func (x *SQLQueryResponse) GetPaginate() *SQLQueryResultPaginate {
	if x != nil {
		return x.Paginate
	}
	return nil
}

func (x *SQLQueryResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ESQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionName string `protobuf:"bytes,1,opt,name=connection_name,json=connectionName,proto3" json:"connection_name,omitempty"`
	IndexName      string `protobuf:"bytes,2,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	Body           []byte `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *ESQuery) Reset() {
	*x = ESQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_igdata_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ESQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ESQuery) ProtoMessage() {}

func (x *ESQuery) ProtoReflect() protoreflect.Message {
	mi := &file_igdata_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ESQuery.ProtoReflect.Descriptor instead.
func (*ESQuery) Descriptor() ([]byte, []int) {
	return file_igdata_proto_rawDescGZIP(), []int{9}
}

func (x *ESQuery) GetConnectionName() string {
	if x != nil {
		return x.ConnectionName
	}
	return ""
}

func (x *ESQuery) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *ESQuery) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type ESResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []byte `protobuf:"bytes,1,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *ESResponse) Reset() {
	*x = ESResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_igdata_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ESResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ESResponse) ProtoMessage() {}

func (x *ESResponse) ProtoReflect() protoreflect.Message {
	mi := &file_igdata_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ESResponse.ProtoReflect.Descriptor instead.
func (*ESResponse) Descriptor() ([]byte, []int) {
	return file_igdata_proto_rawDescGZIP(), []int{10}
}

func (x *ESResponse) GetResponse() []byte {
	if x != nil {
		return x.Response
	}
	return nil
}

var File_igdata_proto protoreflect.FileDescriptor

var file_igdata_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x69, 0x67, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a,
	0x69, 0x67, 0x72, 0x70, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x27, 0x0a, 0x0b, 0x50, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x28, 0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x6d, 0x0a,
	0x0c, 0x53, 0x51, 0x4c, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x2f, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69,
	0x73, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x07,
	0x53, 0x51, 0x4c, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x22, 0x37, 0x0a, 0x0b, 0x53, 0x51, 0x4c, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x5e, 0x0a, 0x0e,
	0x53, 0x51, 0x4c, 0x43, 0x6f, 0x6e, 0x6a, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69, 0x67, 0x72, 0x70, 0x63, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x51, 0x4c, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xb4, 0x02, 0x0a,
	0x0f, 0x53, 0x51, 0x4c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x33, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69, 0x67, 0x72, 0x70, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x51, 0x4c, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x6d, 0x69, 0x74, 0x5f, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x6d, 0x69,
	0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x6f, 0x72, 0x74,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x67, 0x72, 0x70, 0x63, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x51, 0x4c, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x05, 0x73, 0x6f,
	0x72, 0x74, 0x73, 0x12, 0x3e, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x6a, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x67, 0x72, 0x70,
	0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x51, 0x4c, 0x43, 0x6f, 0x6e, 0x6a, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6a, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x67, 0x0a, 0x16, 0x53, 0x51, 0x4c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x66, 0x0a, 0x10,
	0x53, 0x51, 0x4c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x67, 0x72, 0x70, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x51, 0x4c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x08, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x65, 0x0a, 0x07, 0x45, 0x53, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x28, 0x0a, 0x0a, 0x45,
	0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xdb, 0x02, 0x0a, 0x06, 0x69, 0x67, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x3b, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x17, 0x2e, 0x69, 0x67, 0x72, 0x70, 0x63,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x69, 0x67, 0x72, 0x70, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a,
	0x07, 0x45, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x13, 0x2e, 0x69, 0x67, 0x72, 0x70, 0x63,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x53, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x16, 0x2e,
	0x69, 0x67, 0x72, 0x70, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x53, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x08, 0x53, 0x51, 0x4c, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x1b, 0x2e, 0x69, 0x67, 0x72, 0x70, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x51, 0x4c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x69, 0x67, 0x72, 0x70, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x51,
	0x4c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x40, 0x0a, 0x0d, 0x45, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x12, 0x13, 0x2e, 0x69, 0x67, 0x72, 0x70, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45,
	0x53, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x16, 0x2e, 0x69, 0x67, 0x72, 0x70, 0x63, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01,
	0x30, 0x01, 0x12, 0x4f, 0x0a, 0x0e, 0x53, 0x51, 0x4c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x12, 0x1b, 0x2e, 0x69, 0x67, 0x72, 0x70, 0x63, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x51, 0x4c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x69, 0x67, 0x72, 0x70, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x51, 0x4c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28,
	0x01, 0x30, 0x01, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x2e, 0x67, 0x68, 0x74, 0x6b, 0x2e,
	0x76, 0x6e, 0x2f, 0x67, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2f, 0x69, 0x67, 0x2f, 0x69, 0x67, 0x64,
	0x61, 0x74, 0x61, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x69, 0x67, 0x72, 0x70,
	0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_igdata_proto_rawDescOnce sync.Once
	file_igdata_proto_rawDescData = file_igdata_proto_rawDesc
)

func file_igdata_proto_rawDescGZIP() []byte {
	file_igdata_proto_rawDescOnce.Do(func() {
		file_igdata_proto_rawDescData = protoimpl.X.CompressGZIP(file_igdata_proto_rawDescData)
	})
	return file_igdata_proto_rawDescData
}

var file_igdata_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_igdata_proto_goTypes = []interface{}{
	(*PingRequest)(nil),            // 0: igrpcproto.PingRequest
	(*PingResponse)(nil),           // 1: igrpcproto.PingResponse
	(*SQLCondition)(nil),           // 2: igrpcproto.SQLCondition
	(*SQLSort)(nil),                // 3: igrpcproto.SQLSort
	(*SQLPaginate)(nil),            // 4: igrpcproto.SQLPaginate
	(*SQLConjunction)(nil),         // 5: igrpcproto.SQLConjunction
	(*SQLQueryRequest)(nil),        // 6: igrpcproto.SQLQueryRequest
	(*SQLQueryResultPaginate)(nil), // 7: igrpcproto.SQLQueryResultPaginate
	(*SQLQueryResponse)(nil),       // 8: igrpcproto.SQLQueryResponse
	(*ESQuery)(nil),                // 9: igrpcproto.ESQuery
	(*ESResponse)(nil),             // 10: igrpcproto.ESResponse
}
var file_igdata_proto_depIdxs = []int32{
	2,  // 0: igrpcproto.SQLConjunction.conditions:type_name -> igrpcproto.SQLCondition
	4,  // 1: igrpcproto.SQLQueryRequest.paginate:type_name -> igrpcproto.SQLPaginate
	3,  // 2: igrpcproto.SQLQueryRequest.sorts:type_name -> igrpcproto.SQLSort
	5,  // 3: igrpcproto.SQLQueryRequest.conjunctions:type_name -> igrpcproto.SQLConjunction
	7,  // 4: igrpcproto.SQLQueryResponse.paginate:type_name -> igrpcproto.SQLQueryResultPaginate
	0,  // 5: igrpcproto.igdata.Ping:input_type -> igrpcproto.PingRequest
	9,  // 6: igrpcproto.igdata.EsQuery:input_type -> igrpcproto.ESQuery
	6,  // 7: igrpcproto.igdata.SQLQuery:input_type -> igrpcproto.SQLQueryRequest
	9,  // 8: igrpcproto.igdata.EsQueryStream:input_type -> igrpcproto.ESQuery
	6,  // 9: igrpcproto.igdata.SQLQueryStream:input_type -> igrpcproto.SQLQueryRequest
	1,  // 10: igrpcproto.igdata.Ping:output_type -> igrpcproto.PingResponse
	10, // 11: igrpcproto.igdata.EsQuery:output_type -> igrpcproto.ESResponse
	8,  // 12: igrpcproto.igdata.SQLQuery:output_type -> igrpcproto.SQLQueryResponse
	10, // 13: igrpcproto.igdata.EsQueryStream:output_type -> igrpcproto.ESResponse
	8,  // 14: igrpcproto.igdata.SQLQueryStream:output_type -> igrpcproto.SQLQueryResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_igdata_proto_init() }
func file_igdata_proto_init() {
	if File_igdata_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_igdata_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_igdata_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_igdata_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SQLCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_igdata_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SQLSort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_igdata_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SQLPaginate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_igdata_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SQLConjunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_igdata_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SQLQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_igdata_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SQLQueryResultPaginate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_igdata_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SQLQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_igdata_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ESQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_igdata_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ESResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_igdata_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_igdata_proto_goTypes,
		DependencyIndexes: file_igdata_proto_depIdxs,
		MessageInfos:      file_igdata_proto_msgTypes,
	}.Build()
	File_igdata_proto = out.File
	file_igdata_proto_rawDesc = nil
	file_igdata_proto_goTypes = nil
	file_igdata_proto_depIdxs = nil
}
